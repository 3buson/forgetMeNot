(()=>{"use strict";const e={issueUpdatedTimestamps:"issueUpdatedTimestamps",lastChanged:"lastChanged",credentials:"credentials"};function t(t,a){return new Promise((n=>chrome.storage.local.set({[e[t]]:a},(()=>n()))))}function a(t){return new Promise((a=>{chrome.storage.local.get().then((n=>{a(n[e[t]])}))}))}let n=null,s=0;async function i(){await async function(){console.log("Loading issues from Jira.");const a=await new Promise((t=>{chrome.storage.sync.get().then((a=>{t(a[e.credentials])}))}));if(!a||!a.email||!a.apiKey)return console.warn("Credentials not present! Cannot fetch from Jira."),void chrome.runtime.openOptionsPage();const n={method:"GET",headers:{Authorization:`Basic ${btoa(`${a.email}:${a.apiKey}`)}`}};return fetch('https://celtra.atlassian.net/rest/api/3/search?jql=assignee%20%3D%20currentUser()%20and%20status%20in%20("Code%20review"%2C%20"Spec%20review")',n).then((e=>e.json())).then((e=>{console.log("Issues loaded, saving into storage."),t("issueUpdatedTimestamps",e.issues.map((e=>e.fields.updated))),t("lastChanged",Date.now())})).catch((e=>console.error(e)))}(),c(await r(),await o())}async function r(){const e=await a("issueUpdatedTimestamps");return Array.isArray(e)?e.length:0}async function o(){const e=await a("issueUpdatedTimestamps");return Array.isArray(e)?e.reduce(((e,t)=>{const a=(new Date).getTime(),n=new Date(t).getTime();return Math.abs(a-n)>864e5?e+1:e}),0):0}function c(e,t){if(0===e)return void chrome.action.setIcon({path:"../../public/icon128.png"});if(0===t)return void chrome.action.setIcon({path:"../../public/bunny_0.png"});s++;const a=s%4;chrome.action.setIcon({path:`../../public/bunny_${a}.png`}),n&&(clearTimeout(n),n=null),n=setTimeout((()=>c(e,t)),50)}const u="pullExternalData",l="nag";function m(){chrome.alarms.clear(l);const e=h();chrome.alarms.create(l,{when:e.valueOf()}),console.log(`Nag alarm scheduled for ${h().toString()}.`)}function h(){const e=new Date,t=e.getHours();return t<9?e.setHours(9,0,0):t<14?e.setHours(14,0,0):(e.setDate(e.getDate()+1),e.setHours(9,0,0)),e}!async function(){chrome.alarms.onAlarm.addListener((e=>{e.name===u?i():e.name===l?async function(){m(),function(){const e=new Date;return 6===e.getDay()||0===e.getDay()}()||(await async function(){const e=await r();0!==e&&e&&(chrome.notifications.create("issues-notification",{type:"basic",iconUrl:"../../public/bunny_0.png",title:"You have issues that are waiting for you",message:`There are ${e} issue(s) that are waiting for your review! Please click the notification to review them.`,priority:2}),chrome.notifications.onClicked.addListener((()=>chrome.tabs.create({url:'https://celtra.atlassian.net/issues/?jql=assignee%20%3D%20currentUser()%20and%20status%20in%20("Code%20review"%2C%20"Spec%20review")'}))))}(),await async function(){if(0===await o())return;const e=chrome.runtime.getURL("nagging/nagging.html");await chrome.tabs.create({active:!0,url:e})}())}():console.log(`Unknown alarm encountered: '${e.name}'.`)})),await i(),chrome.alarms.clear(u),chrome.alarms.create(u,{periodInMinutes:5}),console.log("Pull data alarm scheduled."),m()}()})();